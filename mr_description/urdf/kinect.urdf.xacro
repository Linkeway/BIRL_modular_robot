<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="cam_py" value="-0.0125" />

  <!-- Parameterised in part by the values in turtlebot_properties.urdf.xacro -->
  <xacro:macro name="kinect" params="parent name *origin">
    <joint name="${name}_rgb_joint" type="fixed">
      <insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${name}_rgb_frame" />
    </joint>
    
    <link name="${name}_rgb_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                 iyy="0.0001" iyz="0.0"
                 izz="0.0001" />
      </inertial>
    </link>
    
    <joint name="${name}_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${name}_rgb_frame" />
      <child link="${name}_rgb_optical_frame" />
    </joint>
    
    <link name="${name}_rgb_optical_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                 iyy="0.0001" iyz="0.0"
                 izz="0.0001" />
      </inertial>
    </link>

  <joint name="${name}_joint" type="fixed">
    <origin xyz="-0.031 ${-cam_py} -0.016" rpy="0 0 0"/>
    <parent link="${name}_rgb_frame"/>
    <child link="${name}_link"/>
  </joint>
  
  <link name="${name}_link">
    <visual>
     <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}"/>
      <geometry>
       <mesh filename="package://mr_description/meshes/kinect.dae"/>
      </geometry>
    </visual>
	  <collision>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
	    <geometry>
	      <box size="0.07271 0.27794 0.073"/>
	    </geometry>
	  </collision>
    <inertial>
      <mass value="0.001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
               iyy="0.0001" iyz="0.0"
               izz="0.0001" />
    </inertial>
  </link>
	  
  <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch 
       files. However, for Gazebo simulation we need them, so we add them here.
       (Hence, don't publish them additionally!) -->
  <joint name="${name}_depth_joint" type="fixed">
  	<origin xyz="0 ${2 * -cam_py} 0" rpy="0 0 0" />
	<parent link="${name}_rgb_frame" />
	<child link="${name}_depth_frame" />
  </joint>
  <link name="${name}_depth_frame">
    <inertial>
      <mass value="0.001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
               iyy="0.0001" iyz="0.0"
               izz="0.0001" />
    </inertial>
  </link>
  
  <joint name="${name}_depth_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
    <parent link="${name}_depth_frame" />
    <child link="${name}_depth_optical_frame" />
  </joint>

  <link name="${name}_depth_optical_frame">
    <inertial>
      <mass value="0.001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
               iyy="0.0001" iyz="0.0"
               izz="0.0001" />
    </inertial>
  </link>
	
	<!-- Kinect sensor for simulation -->
	<turtlebot_sim_3dsensor/>

  <gazebo reference="${name}_depth_frame">
  <sensor type="depth" name="openni_camera_camera">       
        <always_on>1</always_on>
        <visualize>true</visualize>             
        <camera>
            <horizontal_fov>1.047</horizontal_fov>  
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <depth_camera>

            </depth_camera>
            <clip>
                <near>0.1</near>
                <far>100</far>
            </clip>
        </camera>
  <plugin name="${name}_controller" filename="libgazebo_ros_openni_kinect.so">
    <baseline>0.2</baseline>
    <alwaysOn>true</alwaysOn>
    <updateRate>1.0</updateRate>
    <cameraName>${name}_ir</cameraName>
    <imageTopicName>/${name}/depth/image_raw</imageTopicName>
    <cameraInfoTopicName>/${name}/depth/camera_info</cameraInfoTopicName>
    <depthImageTopicName>/${name}/depth/image_raw</depthImageTopicName>
    <depthImageInfoTopicName>/${name}/depth/camera_info</depthImageInfoTopicName>
    <pointCloudTopicName>/${name}/depth/points</pointCloudTopicName>
    <frameName>${name}_depth_optical_frame</frameName>
    <pointCloudCutoff>0.5</pointCloudCutoff>
    <distortionK1>0.00000001</distortionK1>
    <distortionK2>0.00000001</distortionK2>
    <distortionK3>0.00000001</distortionK3>
    <distortionT1>0.00000001</distortionT1>
    <distortionT2>0.00000001</distortionT2>
    <CxPrime>0</CxPrime>
    <Cx>0</Cx>
    <Cy>0</Cy>
    <focalLength>0</focalLength>
    <hackBaseline>0</hackBaseline>
  </plugin>
  </sensor>
</gazebo>

  </xacro:macro>
</robot>
